#!/usr/bin/env bash

while getopts "hv" opt; do
  case $opt in
    h)
      echo "Run any npm script with fzf, just type fzfnpm and hit Enter"
      exit 0
      ;;
    v)
      echo "version 0.7.0"
      exit 0
      ;;
    \?)
      echo "Invalid option: -$OPTARG"
      exit 1
      ;;
  esac
done

file="package.json"
if [ ! -e "$file" ]; then
    echo "No $file file ðŸ«¥"
	exit 1
fi

package="npm"
if [ -e "yarn.lock" ]; then
  package="yarn"
fi

if [ -e "pnpm-lock.yaml" ]; then
  package="pnpm"
fi

if [ -e "package-lock.json" ]; then
  package="npm"
fi

# Get the last selected script from cache
last_script_file="/tmp/fzfnpm_last_script_$(pwd | md5sum | cut -d' ' -f1)"
last_script=""
if [ -f "$last_script_file" ]; then
  last_script=$(cat "$last_script_file")
fi

function run_command {
  while read line; do
    # Save the selected script for next time
    echo "$line" > "$last_script_file"
    
    case $package in
      pnpm)
        pnpm run $line
        ;;
      yarn)
        yarn $line
        ;;
      npm)
        npm run $line
        ;;
      *)
        npm run $line
        ;;
    esac
    # Wait for the command to complete before exiting
    wait $!
    exit $?
  done
  exit 0
}

# Get scripts and reorder with last used at top
scripts=$(jq '.scripts | to_entries | .[] | .key' package.json | sed 's/"//g' | grep -E '^\w')

if [ -n "$last_script" ]; then
  # Put last script at the top, then the rest
  echo "$last_script"
  echo "$scripts" | grep -v "^$last_script$"
else
  echo "$scripts"
fi |
fzf --no-info --pointer=ðŸš€ --prompt="ðŸ”¥ [$package] " --header="Select script and hit <Enter> to run with $package" |
run_command
exit 0
